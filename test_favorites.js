const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api'; // Change this to your server URL
let authToken = '';

// Test data
const testUser = {
  email: 'test@example.com',
  password: 'password123'
};

const testWork = {
  type: 'film',
  nameArabic: 'ŸÅŸäŸÑŸÖ ÿ™ÿ¨ÿ±Ÿäÿ®Ÿä',
  nameEnglish: 'Test Film',
  year: 2024,
  director: 'ŸÖÿÆÿ±ÿ¨ ÿ™ÿ¨ÿ±Ÿäÿ®Ÿä',
  assistantDirector: 'ŸÖÿÆÿ±ÿ¨ ŸÖÿ≥ÿßÿπÿØ ÿ™ÿ¨ÿ±Ÿäÿ®Ÿä',
  genre: 'ÿØÿ±ÿßŸÖÿß',
  cast: ['ŸÖŸÖÿ´ŸÑ ÿ£ŸàŸÑ', 'ŸÖŸÖÿ´ŸÑÿ© ÿ´ÿßŸÜŸäÿ©'],
  country: 'ŸÖÿµÿ±',
  filmingLocation: 'ÿßŸÑŸÇÿßŸáÿ±ÿ©',
  summary: 'ŸÖŸÑÿÆÿµ ÿ™ÿ¨ÿ±Ÿäÿ®Ÿä ŸÑŸÑŸÅŸäŸÑŸÖ'
};

async function testFavorites() {
  try {
    console.log('üß™ Testing Favorites Feature...\n');

    // 1. Sign in user
    console.log('1Ô∏è‚É£ Signing in user...');
    const signinResponse = await axios.post(`${BASE_URL}/users/signin`, testUser);
    authToken = signinResponse.data.token;
    console.log('‚úÖ User signed in successfully\n');

    // 2. Create a test work
    console.log('2Ô∏è‚É£ Creating test work...');
    const workResponse = await axios.post(`${BASE_URL}/works`, testWork, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    const workId = workResponse.data._id;
    console.log(`‚úÖ Work created with ID: ${workId}\n`);

    // 3. Check initial favorite status
    console.log('3Ô∏è‚É£ Checking initial favorite status...');
    const initialStatus = await axios.get(`${BASE_URL}/users/favorites/check/${workId}`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    console.log(`‚úÖ Initial status: ${initialStatus.data.isFavorite}\n`);

    // 4. Add to favorites
    console.log('4Ô∏è‚É£ Adding work to favorites...');
    const addResponse = await axios.post(`${BASE_URL}/users/favorites`, 
      { workId }, 
      { headers: { Authorization: `Bearer ${authToken}` } }
    );
    console.log(`‚úÖ Added to favorites: ${addResponse.data.message}\n`);

    // 5. Check favorite status again
    console.log('5Ô∏è‚É£ Checking favorite status after adding...');
    const statusAfterAdd = await axios.get(`${BASE_URL}/users/favorites/check/${workId}`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    console.log(`‚úÖ Status after adding: ${statusAfterAdd.data.isFavorite}\n`);

    // 6. Get favorites list
    console.log('6Ô∏è‚É£ Getting favorites list...');
    const favoritesList = await axios.get(`${BASE_URL}/users/favorites`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    console.log(`‚úÖ Favorites count: ${favoritesList.data.count}`);
    console.log(`‚úÖ Favorites: ${favoritesList.data.favorites.map(f => f.nameArabic).join(', ')}\n`);

    // 7. Remove from favorites
    console.log('7Ô∏è‚É£ Removing work from favorites...');
    const removeResponse = await axios.delete(`${BASE_URL}/users/favorites/${workId}`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    console.log(`‚úÖ Removed from favorites: ${removeResponse.data.message}\n`);

    // 8. Check final favorite status
    console.log('8Ô∏è‚É£ Checking final favorite status...');
    const finalStatus = await axios.get(`${BASE_URL}/users/favorites/check/${workId}`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    console.log(`‚úÖ Final status: ${finalStatus.data.isFavorite}\n`);

    // 9. Clean up - delete test work
    console.log('9Ô∏è‚É£ Cleaning up - deleting test work...');
    await axios.delete(`${BASE_URL}/works/${workId}`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    console.log('‚úÖ Test work deleted\n');

    console.log('üéâ All favorites tests passed successfully!');

  } catch (error) {
    console.error('‚ùå Test failed:', error.response?.data || error.message);
  }
}

// Run the test
testFavorites();
